[{"path":[]},{"path":"https://yoshidk6.github.io/rstanemax/articles/emaxmodel.html","id":"model-run-with-stan_emax-function","dir":"Articles","previous_headings":"Typical workflow","what":"Model run with stan_emax function","title":"Simple Emax model fit with Stan","text":"stan_emax() main function package perform Emax model analysis data. function requires minimum two input arguments - formula data. formula argument, specify columns data used exposure response data, format similar stats::lm() function, e.g. response ~ exposure. plot() function shows estimated Emax model curve 95% credible intervals parameters.  Output plot() function (stanemax object) ggplot object, can apply additional settings ggplot2. example using log scale x axis (note exposure == 0 hanging left, making curve bit weird).  Raw output rstan stored output variable, can access extract_stanfit() function.","code":"data(exposure.response.sample)  fit.emax <- stan_emax(response ~ exposure, data = exposure.response.sample,                       # the next line is only to make the example go fast enough                       chains = 2, iter = 1000, seed = 12345) fit.emax #> ---- Emax model fit with rstanemax ---- #>  #>        mean se_mean    sd  2.5%   25%   50%   75%  97.5%  n_eff Rhat #> emax  92.25    0.36  6.00 80.19 88.36 92.39 96.14 103.66 280.65 1.00 #> e0     5.72    0.30  4.65 -2.89  2.63  5.47  8.51  15.49 248.72 1.00 #> ec50  75.46    0.85 19.88 45.00 61.41 72.92 87.02 118.99 545.68 1.01 #> gamma  1.00     NaN  0.00  1.00  1.00  1.00  1.00   1.00    NaN  NaN #> sigma 16.60    0.07  1.63 13.79 15.47 16.52 17.60  20.03 585.62 1.00 #>  #> * Use `extract_stanfit()` function to extract raw stanfit object #> * Use `extract_param()` function to extract posterior draws of key parameters #> * Use `plot()` function to visualize model fit #> * Use `posterior_predict()` or `posterior_predict_quantile()` function to get #>   raw predictions or make predictions on new data #> * Use `extract_obs_mod_frame()` function to extract raw data  #>   in a processed format (useful for plotting) plot(fit.emax) plot(fit.emax) + scale_x_log10() + expand_limits(x = 1) #> Warning in scale_x_log10(): log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values. #> log-10 transformation introduced infinite values. class(extract_stanfit(fit.emax)) #> [1] \"stanfit\" #> attr(,\"package\") #> [1] \"rstan\""},{"path":"https://yoshidk6.github.io/rstanemax/articles/emaxmodel.html","id":"prediction-of-response-with-new-exposure-data","dir":"Articles","previous_headings":"Typical workflow","what":"Prediction of response with new exposure data","title":"Simple Emax model fit with Stan","text":"posterior_predict() function allows users predict response using new exposure data. newdata provided, function returns prediction exposures original data. default output matrix posterior predictions, can also specify “dataframe” “tibble” contain posterior predictions long format. See help rstanemax::posterior_predict() description two predictions, respHat response. can also get quantiles predictions posterior_predict_quantile() function. Input data can obtained format extract_obs_mod_frame() function. particularly useful want plot estimated Emax curve.  Posterior draws Emax model parameters can extracted extract_param() function.","code":"response.pred <- posterior_predict(fit.emax, newdata = c(0, 100, 1000), returnType = \"tibble\")  response.pred %>% select(mcmcid, exposure, respHat, response) #> # A tibble: 3,000 × 4 #>    mcmcid exposure   respHat response #>     <int>    <dbl> <dbl[1d]>    <dbl> #>  1      1        0     11.8      14.1 #>  2      1      100     55.4      84.5 #>  3      1     1000     88.0      80.4 #>  4      2        0     -2.84    -17.0 #>  5      2      100     61.2      57.7 #>  6      2     1000     90.8      83.3 #>  7      3        0      4.01    -10.1 #>  8      3      100     57.5      57.6 #>  9      3     1000     92.1      85.6 #> 10      4        0      6.34     42.3 #> # ℹ 2,990 more rows resp.pred.quantile <- posterior_predict_quantile(fit.emax, newdata = seq(0, 5000, by = 100)) resp.pred.quantile #> # A tibble: 51 × 11 #>    exposure covemax covec50 cove0 Covariates ci_low ci_med ci_high pi_low pi_med #>       <dbl> <fct>   <fct>   <fct> <chr>       <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #>  1        0 1       1       1     \"\"          -1.71   5.47    13.9  -22.3   5.59 #>  2      100 1       1       1     \"\"          52.8   58.9     64.8   30.0  58.4  #>  3      200 1       1       1     \"\"          68.0   73.0     77.9   45.9  73.4  #>  4      300 1       1       1     \"\"          75.2   79.6     84.2   51.4  79.5  #>  5      400 1       1       1     \"\"          79.0   83.4     88.1   56.9  83.7  #>  6      500 1       1       1     \"\"          81.2   85.9     90.8   60.1  87.4  #>  7      600 1       1       1     \"\"          82.7   87.7     92.9   60.5  88.0  #>  8      700 1       1       1     \"\"          83.8   89.1     94.5   60.8  88.9  #>  9      800 1       1       1     \"\"          84.6   90.1     95.7   62.9  89.4  #> 10      900 1       1       1     \"\"          85.4   90.8     96.6   62.9  91.7  #> # ℹ 41 more rows #> # ℹ 1 more variable: pi_high <dbl> obs.formatted <- extract_obs_mod_frame(fit.emax) ggplot(resp.pred.quantile, aes(exposure, ci_med)) +   geom_line() +    geom_ribbon(aes(ymin=ci_low, ymax=ci_high), alpha = .5) +   geom_ribbon(aes(ymin=pi_low, ymax=pi_high), alpha = .2) +   geom_point(data = obs.formatted,              aes(y = response)) +   labs(y = \"response\") posterior.fit.emax <- extract_param(fit.emax) posterior.fit.emax #> # A tibble: 1,000 × 6 #>    mcmcid  emax    e0  ec50     gamma     sigma #>     <int> <dbl> <dbl> <dbl> <dbl[1d]> <dbl[1d]> #>  1      1  83.1 11.8   90.6         1      18.0 #>  2      2  98.7 -2.84  54.0         1      17.0 #>  3      3  95.0  4.01  77.4         1      13.7 #>  4      4  92.4  6.34  60.6         1      16.5 #>  5      5  91.6 10.7   65.1         1      16.5 #>  6      6 100.   4.21  72.4         1      16.2 #>  7      7  91.8  3.87  59.6         1      15.5 #>  8      8  86.2  6.69  54.2         1      20.6 #>  9      9  97.4  2.26  59.3         1      18.0 #> 10     10  85.1  8.93  54.5         1      17.5 #> # ℹ 990 more rows"},{"path":"https://yoshidk6.github.io/rstanemax/articles/emaxmodel.html","id":"fix-parameter-values-in-emax-model","dir":"Articles","previous_headings":"","what":"Fix parameter values in Emax model","title":"Simple Emax model fit with Stan","text":"can fix parameter values Emax model Emax, E0 /gamma (Hill coefficient). See help stan_emax() details. default fix gamma 1 estimate Emax E0 data. example estimating gamma data. can compare difference posterior predictions two models (case close ):","code":"data(exposure.response.sample)  fit.emax.sigmoidal <- stan_emax(response ~ exposure, data = exposure.response.sample,                                  gamma.fix = NULL,                                 # the next line is only to make the example go fast enough                                 chains = 2, iter = 1000, seed = 12345) fit.emax.sigmoidal #> ---- Emax model fit with rstanemax ---- #>  #>        mean se_mean    sd  2.5%   25%   50%   75%  97.5%  n_eff Rhat #> emax  90.02    0.58 10.32 73.46 83.11 88.70 95.63 114.76 317.23 1.01 #> e0     6.96    0.21  4.84 -3.04  3.74  7.06 10.15  16.46 528.43 1.01 #> ec50  78.62    1.72 30.22 44.50 59.56 71.99 88.88 153.71 308.57 1.00 #> gamma  1.16    0.02  0.34  0.62  0.93  1.12  1.34   1.93 444.96 1.01 #> sigma 16.81    0.08  1.69 13.99 15.56 16.61 17.84  20.53 467.62 1.01 #>  #> * Use `extract_stanfit()` function to extract raw stanfit object #> * Use `extract_param()` function to extract posterior draws of key parameters #> * Use `plot()` function to visualize model fit #> * Use `posterior_predict()` or `posterior_predict_quantile()` function to get #>   raw predictions or make predictions on new data #> * Use `extract_obs_mod_frame()` function to extract raw data  #>   in a processed format (useful for plotting) exposure_pred <- seq(min(exposure.response.sample$exposure),                      max(exposure.response.sample$exposure),                      length.out = 100)  pred1 <-    posterior_predict_quantile(fit.emax, exposure_pred) %>%    mutate(model = \"Emax\") pred2 <-    posterior_predict_quantile(fit.emax.sigmoidal, exposure_pred) %>%    mutate(model = \"Sigmoidal Emax\")  pred <- bind_rows(pred1, pred2)   ggplot(pred, aes(exposure, ci_med, color = model, fill = model)) +   geom_line() +    geom_ribbon(aes(ymin=ci_low, ymax=ci_high), alpha = .3) +   geom_ribbon(aes(ymin=pi_low, ymax=pi_high), alpha = .1, color = NA) +   geom_point(data=exposure.response.sample, aes(exposure, response),               color = \"black\", fill = NA, size=2) +   labs(y = \"response\")"},{"path":"https://yoshidk6.github.io/rstanemax/articles/emaxmodel.html","id":"set-covariates","dir":"Articles","previous_headings":"","what":"Set covariates","title":"Simple Emax model fit with Stan","text":"can specify categorical covariates Emax, EC50, E0. See help stan_emax() details.  can extract MCMC samples raw stanfit evaluate differences groups.","code":"data(exposure.response.sample.with.cov)  test.data <-   mutate(exposure.response.sample.with.cov,          SEX = ifelse(cov2 == \"B0\", \"MALE\", \"FEMALE\"))  fit.cov <- stan_emax(formula = resp ~ conc, data = test.data,                      param.cov = list(emax = \"SEX\"),                      # the next line is only to make the example go fast enough                      chains = 2, iter = 1000, seed = 12345) fit.cov #> ---- Emax model fit with rstanemax ---- #>  #>                mean se_mean    sd  2.5%   25%    50%    75%  97.5%  n_eff Rhat #> emax[FEMALE]  81.26    0.16  3.81 73.53 78.70  81.14  83.70  88.79 552.80 1.01 #> emax[MALE]    87.64    0.20  5.19 77.54 84.15  87.63  91.21  98.17 667.62 1.01 #> e0            15.20    0.09  2.30 10.40 13.72  15.22  16.69  19.66 705.42 1.01 #> ec50         107.65    0.78 21.27 67.63 93.17 106.98 121.07 151.35 742.54 1.00 #> gamma          1.00     NaN  0.00  1.00  1.00   1.00   1.00   1.00    NaN  NaN #> sigma         10.51    0.03  1.00  8.84  9.77  10.44  11.15  12.70 871.21 1.00 #>  #> * Use `extract_stanfit()` function to extract raw stanfit object #> * Use `extract_param()` function to extract posterior draws of key parameters #> * Use `plot()` function to visualize model fit #> * Use `posterior_predict()` or `posterior_predict_quantile()` function to get #>   raw predictions or make predictions on new data #> * Use `extract_obs_mod_frame()` function to extract raw data  #>   in a processed format (useful for plotting) plot(fit.cov) fit.cov.posterior <-    extract_param(fit.cov)  emax.posterior <-    fit.cov.posterior %>%    select(mcmcid, SEX, emax) %>%    tidyr::pivot_wider(names_from = SEX, values_from = emax) %>%    mutate(delta = FEMALE - MALE)  ggplot2::qplot(delta, data = emax.posterior, bins = 30) +   ggplot2::labs(x = \"emax[FEMALE] - emax[MALE]\") #> Warning: `qplot()` was deprecated in ggplot2 3.4.0. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  # Credible interval of delta quantile(emax.posterior$delta, probs = c(0.025, 0.05, 0.5, 0.95, 0.975)) #>       2.5%         5%        50%        95%      97.5%  #> -16.117172 -14.467374  -6.249869   1.593632   2.551678  # Posterior probability of emax[FEMALE] < emax[MALE] sum(emax.posterior$delta < 0) / nrow(emax.posterior) #> [1] 0.903"},{"path":"https://yoshidk6.github.io/rstanemax/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kenta Yoshida. Author, maintainer. Danielle Navarro. Author. Trustees Columbia University. Copyright holder.           src/init.cpp, tools/make_cc.R, R/stanmodels.R","code":""},{"path":"https://yoshidk6.github.io/rstanemax/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yoshida K, Navarro D (2024). rstanemax: Emax Model Analysis 'Stan'. R package version 0.1.5, https://yoshidk6.github.io/rstanemax/, https://github.com/yoshidk6/rstanemax.","code":"@Manual{,   title = {rstanemax: Emax Model Analysis with 'Stan'},   author = {Kenta Yoshida and Danielle Navarro},   year = {2024},   note = {R package version 0.1.5, https://yoshidk6.github.io/rstanemax/},   url = {https://github.com/yoshidk6/rstanemax}, }"},{"path":"https://yoshidk6.github.io/rstanemax/index.html","id":"rstanemax","dir":"","previous_headings":"","what":"Emax Model Analysis with Stan","title":"Emax Model Analysis with Stan","text":"small package performs simple sigmoidal Emax model fit using Stan, without need (1) writing Stan model code (2) setting environment compile Stan model, inspired rstanarm package. rstanarm package (link) flexible, general purpose tool perform various Bayesian modeling formula notations, generalized mixed effect models joint models. One small gap nonlinear model fitting, accepts nonlinear functions defined stats package SS prefixes (link). Unfortunately (sigmoidal) Emax model, one commonly used nonlinear functions field pharmacometrics, among available functions. rstanarm package also seems assuming fit nonlinear mixed effect models, simple nonlinear models without mixed effects. brms another great general purpose package allows formula notation, requires users compile generated Stan models. need setting environment compiling Stan code can daunting beginners, especially Windows. hope rstanemax package fill niche gap, allow easier implementation Emax model Bayesian framework, enable routine uses pharmacokinetic/pharmacodynamic field. package build using rstantools (link) following helpful step--step guide (link) creating package depends RStan.","code":""},{"path":[]},{"path":"https://yoshidk6.github.io/rstanemax/index.html","id":"from-cran","dir":"","previous_headings":"Installation","what":"From CRAN","title":"Emax Model Analysis with Stan","text":"can install released version rstanemax CRAN :","code":"install.packages(\"rstanemax\")"},{"path":"https://yoshidk6.github.io/rstanemax/index.html","id":"from-source","dir":"","previous_headings":"Installation","what":"From source","title":"Emax Model Analysis with Stan","text":"can alternatively install package source. , first install RStan C++ Toolchain.RStan Getting Started Also, follow instruction using Windows PC.Installing RStan source Windows step able install package GitHub using devtools.","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"yoshidk6/rstanemax\")"},{"path":"https://yoshidk6.github.io/rstanemax/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Emax Model Analysis with Stan","text":"GitHub pages contains function references vignette.","code":"# Load rstanemax library(rstanemax) #> Loading required package: Rcpp  # Run model with a sample dataset set.seed(12345)  data(exposure.response.sample)  fit.emax <- stan_emax(response ~ exposure, data = exposure.response.sample,                       # the next line is only to make the output short                       chains = 1, iter = 500, seed = 12345) #>  #> SAMPLING FOR MODEL 'emax' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 8.1e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.81 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:   1 / 500 [  0%]  (Warmup) #> Chain 1: Iteration:  50 / 500 [ 10%]  (Warmup) #> Chain 1: Iteration: 100 / 500 [ 20%]  (Warmup) #> Chain 1: Iteration: 150 / 500 [ 30%]  (Warmup) #> Chain 1: Iteration: 200 / 500 [ 40%]  (Warmup) #> Chain 1: Iteration: 250 / 500 [ 50%]  (Warmup) #> Chain 1: Iteration: 251 / 500 [ 50%]  (Sampling) #> Chain 1: Iteration: 300 / 500 [ 60%]  (Sampling) #> Chain 1: Iteration: 350 / 500 [ 70%]  (Sampling) #> Chain 1: Iteration: 400 / 500 [ 80%]  (Sampling) #> Chain 1: Iteration: 450 / 500 [ 90%]  (Sampling) #> Chain 1: Iteration: 500 / 500 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.158951 seconds (Warm-up) #> Chain 1:                0.065293 seconds (Sampling) #> Chain 1:                0.224244 seconds (Total) #> Chain 1: #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> http://mc-stan.org/misc/warnings.html#tail-ess fit.emax #> ---- Emax model fit with rstanemax ---- #>  #>        mean se_mean    sd  2.5%   25%   50%   75%  97.5%  n_eff Rhat #> emax  92.01    0.47  6.49 79.08 87.94 92.11 96.35 103.43 188.95    1 #> e0     5.69    0.35  4.92 -2.87  2.13  5.90  9.07  15.00 192.44    1 #> ec50  75.78    1.23 19.37 44.51 62.88 72.26 85.34 124.31 246.47    1 #> gamma  1.00     NaN  0.00  1.00  1.00  1.00  1.00   1.00    NaN  NaN #> sigma 16.65    0.13  1.66 13.77 15.47 16.55 17.55  20.20 157.45    1 #>  #> * Use `extract_stanfit()` function to extract raw stanfit object #> * Use `extract_param()` function to extract posterior draws of key parameters #> * Use `plot()` function to visualize model fit #> * Use `posterior_predict()` or `posterior_predict_quantile()` function to get #>   raw predictions or make predictions on new data #> * Use `extract_obs_mod_frame()` function to extract raw data  #>   in a processed format (useful for plotting) plot(fit.emax)"},{"path":"https://yoshidk6.github.io/rstanemax/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Emax Model Analysis with Stan","text":"Fitting Emax Model R nice intro Emax (kindly introducing package). brms implementation model can found .","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/as_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert stanemax object to a posterior draws object — as_draws","title":"Convert stanemax object to a posterior draws object — as_draws","text":"Convert stanemax object posterior draws object","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/as_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert stanemax object to a posterior draws object — as_draws","text":"","code":"# S3 method for class 'stanemax' as_draws(x, inc_warmup = FALSE, ...)  # S3 method for class 'stanemax' as_draws_list(x, inc_warmup = FALSE, ...)  # S3 method for class 'stanemax' as_draws_array(x, inc_warmup = FALSE, ...)  # S3 method for class 'stanemax' as_draws_df(x, inc_warmup = FALSE, ...)  # S3 method for class 'stanemax' as_draws_matrix(x, inc_warmup = FALSE, ...)  # S3 method for class 'stanemax' as_draws_rvars(x, inc_warmup = FALSE, ...)"},{"path":"https://yoshidk6.github.io/rstanemax/reference/as_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert stanemax object to a posterior draws object — as_draws","text":"x object class stanemax. inc_warmup warmup draws included? Defaults FALSE. ... Arguments passed individual methods (applicable).'","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/as_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert stanemax object to a posterior draws object — as_draws","text":"draws object appropriate subclass","code":""},{"path":[]},{"path":"https://yoshidk6.github.io/rstanemax/reference/as_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert stanemax object to a posterior draws object — as_draws","text":"","code":"if (FALSE) { # \\dontrun{ data(exposure.response.sample) fit <- stan_emax(response ~ exposure, exposure.response.sample) posterior::as_draws_list(fit) posterior::as_draws_array(fit) posterior::as_draws_df(fit) posterior::as_draws_matrix(fit) posterior::as_draws_rvars(fit) } # }"},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample simulated data for exposure-response. — exposure.response.sample","title":"Sample simulated data for exposure-response. — exposure.response.sample","text":"Sample simulated data exposure-response.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample simulated data for exposure-response. — exposure.response.sample","text":"","code":"exposure.response.sample"},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample simulated data for exposure-response. — exposure.response.sample","text":"data frame columns: dose Dose levels used simulation pharmacokinetics exposure Simulated exposure response Simulated pharmacodynamic response","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample simulated data for exposure-response. — exposure.response.sample","text":"","code":"exposure.response.sample #> # A tibble: 60 × 3 #>     dose exposure response #>    <dbl>    <dbl>    <dbl> #>  1     0        0    17.2  #>  2     0        0     9.78 #>  3     0        0    -8.81 #>  4     0        0     7.68 #>  5     0        0    -6.30 #>  6     0        0    14.8  #>  7     0        0   -18.5  #>  8     0        0    17.3  #>  9     0        0    15.0  #> 10     0        0    11.3  #> # ℹ 50 more rows"},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.with.cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample simulated data for exposure-response with covariates — exposure.response.sample.with.cov","title":"Sample simulated data for exposure-response with covariates — exposure.response.sample.with.cov","text":"Sample simulated data exposure-response covariates","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.with.cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample simulated data for exposure-response with covariates — exposure.response.sample.with.cov","text":"","code":"exposure.response.sample.with.cov"},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.with.cov.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample simulated data for exposure-response with covariates — exposure.response.sample.with.cov","text":"data frame columns: dose Dose levels used simulation pharmacokinetics conc Simulated exposure resp Simulated pharmacodynamic response cov1 Covariate 1 e0 cov2 Covariate 2 emax cov3 Covariate 3 ec50 (data type factor) cov3num Covariate 3 ec50 (data type numeric)","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/exposure.response.sample.with.cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample simulated data for exposure-response with covariates — exposure.response.sample.with.cov","text":"","code":"exposure.response.sample #> # A tibble: 60 × 3 #>     dose exposure response #>    <dbl>    <dbl>    <dbl> #>  1     0        0    17.2  #>  2     0        0     9.78 #>  3     0        0    -8.81 #>  4     0        0     7.68 #>  5     0        0    -6.30 #>  6     0        0    14.8  #>  7     0        0   -18.5  #>  8     0        0    17.3  #>  9     0        0    15.0  #> 10     0        0    11.3  #> # ℹ 50 more rows"},{"path":"https://yoshidk6.github.io/rstanemax/reference/extract_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract posterior draws of key parameters — extract_param","title":"Extract posterior draws of key parameters — extract_param","text":"Extract posterior draws key parameters","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/extract_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract posterior draws of key parameters — extract_param","text":"","code":"extract_param(object)"},{"path":"https://yoshidk6.github.io/rstanemax/reference/extract_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract posterior draws of key parameters — extract_param","text":"object stanemax class object","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/extract_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract posterior draws of key parameters — extract_param","text":"tibble containing posterior draws key parameters. covariate(s) included model, posterior draws different combinations covariates supplied long format - e.g. posterior draws 100 samples 4 levels covariates, returned tibble length 400","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/posterior_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome prediction from posterior distribution of parameters — posterior_predict","title":"Outcome prediction from posterior distribution of parameters — posterior_predict","text":"Compute outcome predictions using posterior samples. Exposure data prediction can either original data used model fit new data.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/posterior_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome prediction from posterior distribution of parameters — posterior_predict","text":"","code":"# S3 method for class 'stanemax' posterior_predict(   object,   newdata = NULL,   returnType = c(\"matrix\", \"dataframe\", \"tibble\"),   newDataType = c(\"raw\", \"modelframe\"),   ... )  posterior_predict_quantile(   object,   newdata = NULL,   ci = 0.9,   pi = 0.9,   newDataType = c(\"raw\", \"modelframe\") )"},{"path":"https://yoshidk6.github.io/rstanemax/reference/posterior_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome prediction from posterior distribution of parameters — posterior_predict","text":"object stanemax class object newdata optional data frame contains columns needed model run (exposure covariates). model covariate, can numeric vector corresponding exposure metric. returnType optional string specifying type return object. newDataType optional string specifying type newdata input, whether format original data frame processed model frame. Mostly used internal purposes users can usually leave default. ... Additional arguments passed methods. ci Credible interval response without residual variability. pi Prediction interval response residual variability.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/posterior_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outcome prediction from posterior distribution of parameters — posterior_predict","text":"object contain predicted response posterior distribution parameters. default matrix containing predicted response. row matrix vector predictions generated using single draw model parameters posterior distribution. either dataframe tibble specified, function returns data frame tibble object long format - row prediction generated using single draw model parameters corresponding exposure. Two types predictions generated function. respHat corresponds prediction without considering residual variability intended provide credible interval \"mean\" response. response include residual variability calculation, therefore range represents prediction interval observed response. return object also contains exposure parameter values used calculation. posterior_predict_quantile() function, can obtain quantiles respHat response specified ci pi.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/posterior_predict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Outcome prediction from posterior distribution of parameters — posterior_predict","text":"Run vignette(\"emaxmodel\", package = \"rstanemax\") see can use posterior prediction plotting estimated Emax curve.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/rstanemax-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'rstanemax' package. — rstanemax-package","title":"The 'rstanemax' package. — rstanemax-package","text":"Perform sigmoidal Emax model fit using Stan without writing Stan model code.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/rstanemax-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'rstanemax' package. — rstanemax-package","text":"Stan Development Team (2018). RStan: R interface Stan. R package version 2.18.2. http://mc-stan.org","code":""},{"path":[]},{"path":"https://yoshidk6.github.io/rstanemax/reference/rstanemax-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The 'rstanemax' package. — rstanemax-package","text":"Maintainer: Kenta Yoshida yoshida.kenta.6@gmail.com (ORCID) Authors: Danielle Navarro djnavarro@protonmail.com contributors: Trustees Columbia University (src/init.cpp, tools/make_cc.R, R/stanmodels.R) [copyright holder]","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/stan_emax.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Emax model fit with Stan — stan_emax","title":"Bayesian Emax model fit with Stan — stan_emax","text":"Run sigmoidal Emax model fit formula notation","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/stan_emax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Emax model fit with Stan — stan_emax","text":"","code":"stan_emax(   formula,   data,   gamma.fix = 1,   e0.fix = NULL,   emax.fix = NULL,   priors = NULL,   param.cov = NULL,   ... )"},{"path":"https://yoshidk6.github.io/rstanemax/reference/stan_emax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Emax model fit with Stan — stan_emax","text":"formula symbolic description variables Emax model fit. data optional data frame containing variables model. gamma.fix (positive) numeric NULL specify gamma (Hill coefficient) sigmoidal Emax model. NULL, gamma estimated data. numeric, gamma fixed number provided. Default = 1 (normal Emax model). e0.fix numeric NULL specify E0 Emax model. NULL, E0 estimated data. numeric, E0 fixed number provided. Default = NULL (estimate data). emax.fix numeric NULL specify Emax Emax model. NULL, Emax estimated data. numeric, Emax fixed number provided. Default = NULL (estimate data). priors named list specifying priors parameters (ec50, emax, e0, gamma, sigma). list item length 2 numeric vector, one corresponding mean another corresponding standard deviation. Currently supports normal distribution priors. param.cov named list specifying categorical covariates parameters (ec50, emax, e0). Convert column factor specific order covariates needed. ... Arguments passed rstan::sampling (e.g. iter, chains).","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/stan_emax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Emax model fit with Stan — stan_emax","text":"object class stanemax","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/stan_emax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian Emax model fit with Stan — stan_emax","text":"following structure used Emax model: $$Response = e_0 + e_{max} \\times exposure ^{\\gamma} / (ec50 ^{\\gamma} + exposure ^ {\\gamma}) + \\epsilon$$ $$\\epsilon \\sim N(0, \\sigma^2)$$","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/stan_emax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian Emax model fit with Stan — stan_emax","text":"","code":"if (FALSE) { # \\dontrun{ data(exposure.response.sample) fit1 <- stan_emax(response ~ exposure, data = exposure.response.sample,                   # the next line is only to make the example go fast enough                   chains = 1, iter = 500, seed = 12345) print(fit1)  # Set priors manually, also estimate gamma instead of the default of fix to 1 fit2 <- stan_emax(response ~ exposure, data = exposure.response.sample, gamma.fix = NULL,                   priors = list(ec50  = c(100, 30), emax  = c(100, 30), e0 = c(10, 5),                                 gamma = c(0, 3), sigma = c(0, 30)),                   # the next line is only to make the example go fast enough                   chains = 1, iter = 500, seed = 12345) print(fit2)  data(exposure.response.sample.with.cov) # Specify covariates fit3 <- stan_emax(formula = resp ~ conc, data = exposure.response.sample.with.cov,                   param.cov = list(emax = \"cov2\", ec50 = \"cov3\", e0 = \"cov1\"),                   # the next line is only to make the example go fast enough                   chains = 1, iter = 500, seed = 12345) print(fit3) } # }"},{"path":"https://yoshidk6.github.io/rstanemax/reference/stanemax-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for stanemax objects — stanemax-methods","title":"Methods for stanemax objects — stanemax-methods","text":"Methods stanemax objects","code":""},{"path":"https://yoshidk6.github.io/rstanemax/reference/stanemax-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for stanemax objects — stanemax-methods","text":"","code":"# S3 method for class 'stanemax' print(x, digits_summary = 2, ...)  extract_stanfit(x)  extract_obs_mod_frame(x)  # S3 method for class 'stanemax' plot(x, show.ci = TRUE, show.pi = FALSE, ci = 0.9, pi = 0.9, ...)"},{"path":"https://yoshidk6.github.io/rstanemax/reference/stanemax-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for stanemax objects — stanemax-methods","text":"x object class stanemax digits_summary number significant digits use printing summary, defaulting 2. Applies quantities effective sample size, always rounded nearest integer. ... Additional arguments passed methods. show.ci logical specifying output figure include credible interval posterior prediction. Default TRUE. show.pi logical specifying output figure include prediction interval. Default FALSE. ci Credible interval range. pi Prediction interval range.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"rstanemax-015","dir":"Changelog","previous_headings":"","what":"rstanemax 0.1.5","title":"rstanemax 0.1.5","text":"CRAN release: 2023-09-12","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"minor-changes-0-1-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rstanemax 0.1.5","text":"Update deprecated syntax future rstan compatibility (@andrjohns)","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"rstanemax-014","dir":"Changelog","previous_headings":"","what":"rstanemax 0.1.4","title":"rstanemax 0.1.4","text":"CRAN release: 2023-03-12","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"minor-changes-0-1-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rstanemax 0.1.4","text":"Added extract_param() function easily retrieve posterior draws key parameters Delegate installation rstantools (@andrjohns)","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"rstanemax-013","dir":"Changelog","previous_headings":"","what":"rstanemax 0.1.3","title":"rstanemax 0.1.3","text":"CRAN release: 2020-11-24","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"minor-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rstanemax 0.1.3","text":"Bug fix - disable options(lifecycle_verbosity = \"error\") avoid unnecessary errors","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"rstanemax-012","dir":"Changelog","previous_headings":"","what":"rstanemax 0.1.2","title":"rstanemax 0.1.2","text":"CRAN release: 2020-06-18","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"minor-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"rstanemax 0.1.2","text":"can now fix Emax emax.fix argument stan_emax() function.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"rstanemax-011","dir":"Changelog","previous_headings":"","what":"rstanemax 0.1.1","title":"rstanemax 0.1.1","text":"CRAN release: 2019-11-19","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"breaking-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"rstanemax 0.1.1","text":"posterior prediction, column name newdata needs one original input data, instead exposure previous version.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"major-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"rstanemax 0.1.1","text":"stan_emax() can now incorporate categorical covariates select parameters. See vignette(\"emaxmodel\") detail.","code":""},{"path":"https://yoshidk6.github.io/rstanemax/news/index.html","id":"rstanemax-010","dir":"Changelog","previous_headings":"","what":"rstanemax 0.1.0","title":"rstanemax 0.1.0","text":"CRAN release: 2019-05-31 Initial CRAN release","code":""}]
